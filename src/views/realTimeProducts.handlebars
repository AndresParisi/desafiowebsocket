<!DOCTYPE html>
<html>
<head>
    <title>Productos en Tiempo Real</title>
</head>
<body>
    <h1>Productos en Tiempo Real</h1>
    <ul id="realTimeProductList">
        {{#each realTimeProducts}}
        <li>
            <h3>{{name}}</h3>
            <p><strong>Precio:</strong> {{price}}</p>
            <p><strong>Descripción:</strong> {{description}}</p>
            <button class="delete-button" data-product-id="{{id}}">Eliminar</button>
        </li>
        {{/each}}
    </ul>

    <form id="realTimeProductForm">
        <h2>Agregar Producto en Tiempo Real</h2>
        <label for="productName">Nombre:</label>
        <input type="text" id="productName" name="name" required>
        <label for="productPrice">Precio:</label>
        <input type="text" id="productPrice" name="price" required>
        <label for="productDescription">Descripción:</label>
        <textarea id="productDescription" name="description" required></textarea>
        <button type="submit">Agregar Producto</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/index.js"></script>
    <script>
        const socketClient = io();

        // Escuchar eventos para actualizar la lista de productos en tiempo real
        socketClient.on("priceUpdated", (products) => {
            // Actualizar la lista de productos en tiempo real
            const productList = document.getElementById("realTimeProductList");
            productList.innerHTML = '';
            
            products.forEach((product) => {
                const productItem = document.createElement("li");
                productItem.innerHTML = `
                    <h3>${product.name}</h3>
                    <p><strong>Precio:</strong> ${product.price}</p>
                    <p><strong>Descripción:</strong> ${product.description}</p>
                    <button class="delete-button" data-product-id="${product.id}">Eliminar</button>
                `;

                // Agregar un manejador de clic para los botones de eliminación
                productItem.querySelector(".delete-button").addEventListener("click", () => {
                    const productId = product.id;
                    socketClient.emit("deleteProduct", productId);
                });

                productList.appendChild(productItem);
            });
        });

        const form = document.getElementById("realTimeProductForm");
        const inputName = document.getElementById("productName");
        const inputPrice = document.getElementById("productPrice");
        const inputDescription = document.getElementById("productDescription");

        form.onsubmit = (e) => {
            e.preventDefault();
            const name = inputName.value;
            const price = inputPrice.value;
            const description = inputDescription.value;

            // Enviar datos al servidor a través de WebSockets para agregar un producto
            socketClient.emit("newPrice", { name, price, description });

            // Limpiar los campos del formulario
            inputName.value = "";
            inputPrice.value = "";
            inputDescription.value = "";
        };
    </script>
</body>
</html>
